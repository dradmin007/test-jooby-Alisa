/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.stasnizhnichenko.test.jooby;

import java.sql.SQLException;

import org.stasnizhnichenko.test.jooby.controllers.TalkController;
import org.stasnizhnichenko.test.jooby.models.CommonModel;
import org.stasnizhnichenko.test.jooby.storage.H2Storage;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.jooby.Jooby;
import io.jooby.MediaType;


public class App extends Jooby {

	{
        decoder(MediaType.json, (ctx, type) -> {
            try {
                return (new ObjectMapper())
                    .readValue(
                        ctx.body().bytes(),
                        Class.forName(type.getTypeName())
                    );
            } catch (ClassNotFoundException | JsonProcessingException exc) {
                return null;
            }
        });

        encoder(MediaType.json, (ctx, result) -> {
            ctx.setDefaultResponseType(MediaType.json);

            try {
                return (new ObjectMapper()).writeValueAsBytes(result);
            } catch (JsonProcessingException exc) {
                return null;
            }
        });
	    	
        path("/api", () -> {
        	
        	final TalkController talk = new TalkController();
        	
        	post("/", talk.talk);
        	
        	get("/", ctx -> {
        		
        		return "testing... \n\n";
        		
        	});
        });

	}
    public static void main(String[] args) {
        // создание соединения с БД и подключение
        final H2Storage h2s = new H2Storage();

        try {
            // подключение к серверу БД
            h2s.connect();

            // инициализация моделей
            CommonModel.initialize(h2s.dataSource());
            
        } catch (SQLException exc) {
        	exc.printStackTrace();
            System.out.println("Unable to start H2 database server! Exiting...\n\n");
            return;
        }

       
        // хук завершения работы
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                // разрыв соединения с БД
                try {
                    h2s.disconnect();
                } catch (SQLException exc) {
                    System.out.println("Unable to stop H2 database server!\n\n");
                }
            }
        });

        // основная работа
    	runApp(args, App::new);
    	
            
    }
}
